const SUPPORTS_POINTER="PointerEvent"in window,SUPPORTS_TOUCH="ontouchstart"in window,canvas=document.getElementById("canvas"),context=canvas.getContext("2d");canvas.width=window.innerWidth,canvas.height=window.innerHeight,context.lineJoin="round",this.drawing=!1,this.xClicks=[],this.yClicks=[],this.dragClicks=[],this.currentBrush=document.querySelector(".active").classList[1];const brushes=Array.prototype.slice.call(document.getElementsByClassName("brush")),brushColors={skyscrapers:"rgb(203,203,203)",residential:"rgb(252,139,148)",commercial:"rgb(191,140,190)",water:"rgb(180,207,226)",parks:"rgb(140,191,142)"},brushSize=document.getElementById("brush-size"),currentBrushSize=document.getElementById("current-brush-size");this.currentSize=parseInt(brushSize.value),this.clickData={skyscrapers:[],residential:[],commercial:[],water:[],parks:[]},this.polygons=[],this.polygonIndex=0;class Circle{constructor(a,b,c){this.x=a,this.y=b,this.r=c/2}}class Polygon{constructor(a,b){this.edges=a,this.color=b}}function render(){for(let a=0;a<this.xClicks.length;a++)context.strokeStyle=brushColors[this.currentBrush],context.lineWidth=this.currentSize,context.beginPath(),this.dragClicks[a]&&0<a?context.moveTo(this.xClicks[a-1],this.yClicks[a-1]):context.moveTo(this.xClicks[a]-1,this.yClicks[a]-1),context.lineTo(this.xClicks[a],this.yClicks[a]),context.closePath(),context.stroke()}function addClick(a,b,c){this.xClicks.push(a),this.yClicks.push(b),this.dragClicks.push(c),this.clickData[this.currentBrush].push(new Circle(a,b,this.currentSize))}function clearActiveBrushes(){brushes.forEach(a=>{a.classList.remove("active")})}function onEventDown(a){const b=a.pageX-canvas.offsetLeft,c=a.pageY-canvas.offsetTop;this.drawing=!0,addClick(b,c),render()}function onEventMove(a){this.drawing&&(addClick(a.pageX-canvas.offsetLeft,a.pageY-canvas.offsetTop,!0),render())}function onEventUp(){this.drawing=!1,this.xClicks=[],this.yClicks=[],this.dragClicks=[]}function detectEdges(a,b){const c=[],d=brushColors[b].slice(4,-1).split(",");let e=a.x+a.r-1,f=a.y,g=a.x+a.r-1,h=context.getImageData(g++,f,1,1).data;for(;h[0]==d[0]&&h[1]==d[1]&&h[2]==d[2];)e=g,h=context.getImageData(g++,f,1,1).data;const i={x:e-1,y:f},j=(a,b)=>{const d=[{x:a.x+1,y:a.y},{x:a.x+1,y:a.y+1},{x:a.x,y:a.y+1},{x:a.x-1,y:a.y+1},{x:a.x-1,y:a.y},{x:a.x-1,y:a.y-1},{x:a.x,y:a.y-1},{x:a.x+1,y:a.y-1}],e=d.findIndex(a=>a.x===b.x&&a.y===b.y);if(7>e)for(let a=0;a<e+1;a++)d.splice(7,0,d.shift());const f=d.findIndex(a=>{const b=context.getImageData(a.x,a.y,1,1).data;return 0==b[0]&&0==b[1]&&0==b[2]}),g=d.findIndex(a=>{const c=context.getImageData(a.x,a.y,1,1).data;return(a.x!==b.x||a.y!==b.y)&&0!=c[0]&&0!=c[1]&&0!=c[2]});if(-1!==f){c.push({x:a.x,y:a.y});const b=d[g];return b.x===i.x&&b.y===i.y?void console.log("back to start!"):j(b,a)}};return j(i,i),new Polygon(c,b)}function generateCity(){const a=this.clickData[this.currentBrush].length-1;this.polygons.push(detectEdges(this.clickData[this.currentBrush][a],this.currentBrush))}window.addEventListener("resize",()=>{canvas.width=window.innerWidth,canvas.height=window.innerHeight,render()}),SUPPORTS_POINTER?(canvas.addEventListener("pointerdown",a=>{onEventDown(a)}),canvas.addEventListener("pointermove",a=>{onEventMove(a)}),canvas.addEventListener("pointerup",a=>{onEventUp(a)}),canvas.addEventListener("pointercancel",a=>{onEventUp(a)})):SUPPORTS_TOUCH?(canvas.addEventListener("touchstart",a=>{onEventDown(a)}),canvas.addEventListener("touchmove",a=>{onEventMove(a)}),canvas.addEventListener("touchend",a=>{onEventUp(a)}),canvas.addEventListener("touchcancel",a=>{onEventUp(a)})):(canvas.addEventListener("mousedown",a=>{onEventDown(a)}),canvas.addEventListener("mousemove",a=>{onEventMove(a)}),canvas.addEventListener("mouseup",a=>{onEventUp(a)}),canvas.addEventListener("mouseleave",a=>{onEventUp(a)})),brushes.forEach(a=>{a.addEventListener("click",()=>{clearActiveBrushes(),this.currentBrush=a.classList[1],a.classList.add("active")})}),brushSize.addEventListener("input",()=>{this.currentSize=parseInt(brushSize.value),currentBrushSize.innerText=brushSize.value}),document.getElementById("generate").addEventListener("click",()=>{generateCity()}),document.getElementById("edges").addEventListener("click",()=>{for(let a=this.polygonIndex;a<this.polygons.length;a++)for(point of this.polygons[a].edges)context.fillStyle="#000",context.fillRect(point.x,point.y,1,1);this.polygonIndex=this.polygons.length});